
# Image
FROM alpine:3.7 as builder
# RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories
# Environment variables
ENV WKHTMLTOX_VERSION=0.12.6

# Copy patches
RUN mkdir -p /tmp/patches
COPY lib/wkhtmltoxconf/* /tmp/patches/

# Install needed packages
RUN apk add --no-cache \
  libstdc++ \
  libx11 \
  libxrender \
  libxext \
  libssl1.0 \
  ca-certificates \
  fontconfig \
  freetype \
  ttf-dejavu \
  ttf-droid \
  ttf-freefont \
  ttf-liberation \
  ttf-ubuntu-font-family \
&& apk add --no-cache --virtual .build-deps \
  g++ \
  git \
  gtk+ \
  gtk+-dev \
  make \
  mesa-dev \
  openssl-dev \
  patch \
  fontconfig-dev \
  freetype-dev \
\
# Download source files
&& git clone --recursive https://github.com/wkhtmltopdf/wkhtmltopdf.git /tmp/wkhtmltopdf \
&& cd /tmp/wkhtmltopdf \
&& git checkout tags/$WKHTMLTOX_VERSION \
\
# Apply patches
&& cd /tmp/wkhtmltopdf/qt \
&& patch -p1 -i /tmp/patches/qt-musl.patch \
&& patch -p1 -i /tmp/patches/qt-musl-iconv-no-bom.patch \
&& patch -p1 -i /tmp/patches/qt-recursive-global-mutex.patch \
&& patch -p1 -i /tmp/patches/qt-gcc6.patch \
\
# Modify qmake config
&& sed -i "s|-O2|$CXXFLAGS|" mkspecs/common/g++.conf \
&& sed -i "/^QMAKE_RPATH/s| -Wl,-rpath,||g" mkspecs/common/g++.conf \
&& sed -i "/^QMAKE_LFLAGS\s/s|+=|+= $LDFLAGS|g" mkspecs/common/g++.conf \
\
# Prepare optimal build settings
&& NB_CORES=$(grep -c '^processor' /proc/cpuinfo) \
\
# Install qt
&& ./configure -confirm-license -opensource \
  -prefix /usr \
  -datadir /usr/share/qt \
  -sysconfdir /etc \
  -plugindir /usr/lib/qt/plugins \
  -importdir /usr/lib/qt/imports \
  -silent \
  -release \
  -static \
  -webkit \
  -script \
  -svg \
  -exceptions \
  -xmlpatterns \
  -openssl-linked \
  -no-fast \
  -no-largefile \
  -no-accessibility \
  -no-stl \
  -no-sql-ibase \
  -no-sql-mysql \
  -no-sql-odbc \
  -no-sql-psql \
  -no-sql-sqlite \
  -no-sql-sqlite2 \
  -no-qt3support \
  -no-opengl \
  -no-openvg \
  -no-system-proxies \
  -no-multimedia \
  -no-audio-backend \
  -no-phonon \
  -no-phonon-backend \
  -no-javascript-jit \
  -no-scripttools \
  -no-declarative \
  -no-declarative-debug \
  -no-mmx \
  -no-3dnow \
  -no-sse \
  -no-sse2 \
  -no-sse3 \
  -no-ssse3 \
  -no-sse4.1 \
  -no-sse4.2 \
  -no-avx \
  -no-neon \
  -no-rpath \
  -no-nis \
  -no-cups \
  -no-pch \
  -no-dbus \
  -no-separate-debug-info \
  -no-gtkstyle \
  -no-nas-sound \
  -no-opengl \
  -no-openvg \
  -no-sm \
  -no-xshape \
  -no-xvideo \
  -no-xsync \
  -no-xinerama \
  -no-xcursor \
  -no-xfixes \
  -no-xrandr \
  -no-mitshm \
  -no-xinput \
  -no-xkb \
  -no-glib \
  -no-icu \
  -nomake demos \
  -nomake docs \
  -nomake examples \
  -nomake tools \
  -nomake tests \
  -nomake translations \
  -graphicssystem raster \
  -qt-zlib \
  -qt-libpng \
  -qt-libmng \
  -qt-libtiff \
  -qt-libjpeg \
  -optimized-qmake \
  -iconv \
  -xrender \
  -fontconfig \
  -D ENABLE_VIDEO=0 \
&& make --jobs $(($NB_CORES*2)) --silent \
&& make install \
\
# Install wkhtmltopdf
&& cd /tmp/wkhtmltopdf \
&& qmake \
&& make --jobs $(($NB_CORES*2)) --silent \
&& make install \
&& make clean \
&& make distclean \
\
# Uninstall qt
&& cd /tmp/wkhtmltopdf/qt \
&& make uninstall \
&& make clean \
&& make distclean \
\
# Clean up when done
&& rm -rf /tmp/* \
&& apk del .build-deps


### product

FROM php:7.0-fpm-alpine

# WORKDIR /var/www/html

# use mirror tsinghua
# RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories

RUN apk update \
    && apk add --no-cache gd-dev libpng-dev \
        libmcrypt-dev \
        libxml2-dev \
        imagemagick6-dev \
        libmemcached-dev \
		libwebp-dev libjpeg-turbo-dev libpng-dev libxpm-dev \
        freetype-dev curl-dev \
        tzdata \
    && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone

COPY --from=builder /include/wkhtmltox/* /include/wkhtmltox/
COPY --from=builder /bin/wkhtmltopdf /bin/wkhtmltopdf
COPY --from=builder /bin/wkhtmltoimage /bin/wkhtmltoimage
COPY --from=builder /lib/libwkhtmltox* /lib/

RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
		libstdc++ \
		libx11 \
		libxrender \
		libxext \
		libssl1.0 \
		ca-certificates \
		fontconfig \
		freetype \
		ttf-dejavu \
		ttf-droid \
		ttf-freefont \
		ttf-liberation \
		ttf-ubuntu-font-family \
		git \
    && export CFLAGS="$PHP_CFLAGS" \
        CPPFLAGS="$PHP_CPPFLAGS" \
        LDFLAGS="$PHP_LDFLAGS" \
	&& pear update-channels \
	&& pecl update-channels \
    && pecl install redis-5.0.2 \
    && pecl install apcu-5.1.8 \
    && docker-php-ext-install bcmath mcrypt \
        mysqli pcntl pdo_mysql shmop soap sockets sysvsem xmlrpc opcache zip \
    && docker-php-ext-configure gd --with-libdir=/usr/include --with-webp-dir=/usr  --with-xpm-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr \
	&& docker-php-ext-install gd \
    && pecl install imagick-3.7.0 \
    && docker-php-ext-install mcrypt \
    && pecl install memcached-3.2.0 \
    && pecl install mongodb-1.9.2 \
    && pecl install xdebug-2.8.1 \
    && docker-php-ext-enable redis \
    && docker-php-ext-enable apcu \
    && docker-php-ext-enable gd \
    && docker-php-ext-enable imagick \
    && docker-php-ext-enable memcached \
    && docker-php-ext-enable mongodb \
    && docker-php-ext-enable xdebug \
	&& cd /tmp \
	&& git clone https://github.com/krakjoe/wkhtmltox \
	&& cd wkhtmltox && phpize && ./configure --with-wkhtmltox=/usr && make && make install \
	&& docker-php-ext-enable wkhtmltox \
# Chane TimeZone
    && cp $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini \
#   && cp $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
    && sed -i 's/;date.timezone =/date.timezone = "Asia\/Shanghai"/g' $PHP_INI_DIR/php.ini \
    && apk del .build-deps \
    && rm /tmp/* -rf

# install composer
# wget https://getcomposer.org/download/2.1.14/composer.phar
RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer