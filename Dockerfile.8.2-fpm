FROM php:8.2-fpm-alpine3.17

LABEL maintainer="lzh1104 <wwwlzhcom@163.com>"

# WORKDIR /var/www/html

# use mirror tsinghua
# RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories

ARG SWOOLE_VERSION
ARG SWOW_VERSION
ARG USE_SWOW

ENV SWOOLE_V=${SWOOLE_VERSION:-5.0.1}
ENV SWOW_V=${SWOW_VERSION:-1.1.0}
ENV USE_SWOW_E=${USE_SWOW:+swow}

RUN apk update \
    && apk add --no-cache tzdata \
    && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone

RUN set -eux; \
    apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        linux-headers \
        imagemagick-dev \
        openssl-dev \
# swoole enable c-ares
        c-ares-dev \
        libmcrypt-dev \
        libxml2-dev \
        libzip-dev \
        libmemcached-dev \
        libavif-dev gd-dev libpng-dev \
        libwebp-dev libjpeg-turbo-dev libpng-dev \
        freetype-dev curl-dev \
    ; \
    export CFLAGS="$PHP_CFLAGS" \
        CPPFLAGS="$PHP_CPPFLAGS" \
        LDFLAGS="$PHP_LDFLAGS" \
	; \
    pecl install redis; \
    pecl install apcu; \
    pecl install protobuf; \
    docker-php-ext-install bcmath \
        mysqli pcntl pdo_mysql shmop soap sockets sysvsem opcache zip; \
    docker-php-ext-configure gd --with-libdir=/usr/include --with-avif --with-webp --with-jpeg --with-freetype; \
    docker-php-ext-install gd; \
    pecl install imagick; \
    pecl install memcached; \
    pecl install mongodb; \
#    pecl install xdebug; \
    docker-php-ext-enable redis apcu protobuf; \
# https://pecl.php.net/package/imagick
    docker-php-ext-enable imagick; \
    docker-php-ext-enable memcached mongodb; \
	if [ "$USE_SWOW_E" != "swow" ]; then \
		pecl install -D 'enable-sockets="yes" enable-openssl="yes" enable-http2="yes" enable-mysqlnd="yes" enable-swoole-json="yes" enable-swoole-curl="yes" enable-cares="yes"' swoole; \
		# cd /tmp && pecl download "swoole-$SWOW_V" && tar xzvf "swoole-$SWOW_V.tgz" && cd "swoole-$SWOW_V" && phpize && ./configure --enable-sockets --enable-openssl --enable-mysqlnd --enable-swoole-json && make && make install; \
		docker-php-ext-enable swoole; \
		echo "swoole.use_shortname=off" >> /usr/local/etc/php/conf.d/docker-php-ext-swoole.ini; \
	else \

# https://github.com/swow/swow 
# swow 和 swoole 不能共存
		curl -o swow.tar.gz -fL "https://github.com/swow/swow/archive/refs/tags/v$SWOW_V.tar.gz"; \
		tar -xzf swow.tar.gz -C /tmp/; \
		rm swow.tar.gz; \
		cd "/tmp/swow-$SWOW_V/ext" && phpize && ./configure && make && make install; \
		docker-php-ext-enable swow; \
	fi; \
# Chane TimeZone
    cp $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini; \
#   && cp $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
    sed -i 's/;date.timezone =/date.timezone = "Asia\/Shanghai"/g' $PHP_INI_DIR/php.ini; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-cache $runDeps; \
	\
	apk del --no-network .build-deps; \
	
    rm /tmp/* -rf

# install composer
RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/local/bin/composer
